#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newApplicationRouteRef ${nuklei:newReferenceId()} # external scope
property newNetworkRouteRef ${nuklei:newReferenceId()} # external scope

property nukleiURMT01C ${nuklei:directory("target/nukleus-itests").controlCapacity(1024, 1024)}

property controlURMT01C ${nukleiURMT01C.control("kafka")}

connect await ROUTED_CLIENT
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:broadcastReceiver(controlURMT01C.controller)}
        option agrona:writer ${agrona:manyToOneWriter(controlURMT01C.nukleus)}

connected

write 0x00000002
write ${controlURMT01C.nextCorrelationId()}
write [0x01]
write [0x06] "source"
write ${newApplicationRouteRef}
write [0x06] "target"
write ${newNetworkRouteRef}
write 0L
write 5s "test1"
write 0
write flush

read 0x40000002
read ${controlURMT01C.correlationId()}

write 0x00000002
write ${controlURMT01C.nextCorrelationId()}
write [0x01]
write [0x06] "source"
write ${newApplicationRouteRef}
write [0x06] "target"
write ${newNetworkRouteRef}
write 0L
write 5s "test2"
write 0
write flush

read 0x40000002
read ${controlURMT01C.correlationId()}

write 0x00000002
write ${controlURMT01C.nextCorrelationId()}
write [0x01]
write [0x06] "source"
write ${newApplicationRouteRef}
write [0x06] "target"
write ${newNetworkRouteRef}
write 0L
write 5s "test3"
write 0
write flush

read 0x40000002
read ${controlURMT01C.correlationId()}

close
closed
